- name: Create an instance
  hosts: localhost
  gather_facts: no
  vars_prompt:
    - name: vmname
      prompt: "Enter VM name"
      default: "test"
      private: no
    - name: size
      prompt: "Enter VM disk size (in gigabyte)"
      default: "10"
      private: no
    - name: linux
      prompt: "Enter VM OS (Linux: debian or centos)"
      default: "centos"
      private: no
    - name: versi
      prompt: "Enter VM versi OS (centos: 6 or 7 or 8, debian: 9 or 10)"
      private: no
    - name: machine
      prompt: "Enter VM machine type (f1-micro or g1-small or n1-standard-1"
      default: "f1-micro"
      private: no
  vars:
      gcp_project: widansible
      gcp_cred_kind: serviceaccount
      gcp_cred_file: /data/gcp/widansible-e50257d17b67.json
      zone: "asia-southeast1-c"
      region: "asia-southeast1"
  tasks:
   - name: create a disk
     gcp_compute_disk:
         name: "{{ vmname }}"
         size_gb: "{{ size }}"
         source_image: 'projects/{{ linux }}-cloud/global/images/family/{{ linux }}-{{ versi }}'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: disk
   - name: create a address
     gcp_compute_address:
         name: '{{ vmname }}'
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: address
   - name: create a instance
     gcp_compute_instance:
         state: present
         name: "{{ vmname }}"
         machine_type: "{{ machine }}"
         disks:
           - auto_delete: true
             boot: true
             source: "{{ disk }}"
         network_interfaces:
             - network:
               access_configs:
                 - name: 'External NAT'
                   nat_ip: '{{ address }}'
                   type: 'ONE_TO_ONE_NAT'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
     register: instance
   - name: Wait for SSH to come up
     wait_for: host={{ address.address }} port=22 delay=10 timeout=60
   - name: Add host to groupname
     add_host: hostname={{ address.address }} groupname=new_instances ansible_ssh_user=widansible

- name: Manage new instances
  hosts: new_instances
  gather_facts: no
  connection: ssh
  become: yes

  tasks:
   - name: install openscap scanner
     package:
       name: ['openscap-scanner, scap-security-guide']
       state: latest

   - name: Create backup directory
     file:
       path: /data/backups/etc/ssh
       owner: root
       group: root
       state: directory
   - name: Backup sshd_config
     fetch:
       src: /etc/ssh/sshd_config
       dest: ./backups/sshd_config
       flat: yes
   - name: Copy sshd_config
     copy:
       src: ./backups/sshd_config
       dest: /data/backups/etc/ssh/sshd_config
       owner: root
       group: root
       mode: '0600'
   - name: Deduplicate values from /etc/ssh/sshd_config
     lineinfile:
       backup: yes
       path: /etc/ssh/sshd_config
       create: false
       regexp: (?i)^\s*Port
       state: absent
   - name: Insert correct line to /etc/ssh/sshd_config
     lineinfile:
       path: /etc/ssh/sshd_config
       create: true
       line: Port 3943
       state: present
       insertafter: ^#?Port
       validate: /usr/sbin/sshd -t -f %s
   - name: Insert correct line to /etc/ssh/sshd_config
     lineinfile:
       path: /etc/ssh/sshd_config
       create: true
       line: Port 22
       state: present
       insertafter: ^#?Port
       validate: /usr/sbin/sshd -t -f %s
   - name: Allow sshd to listen on tcp port 3943
     seport:
       ports: 3943
       proto: tcp
       setype: ssh_port_t
       state: present
   - name: Restart service sshd, in all cases
     service:
       name: sshd
       state: restarted

